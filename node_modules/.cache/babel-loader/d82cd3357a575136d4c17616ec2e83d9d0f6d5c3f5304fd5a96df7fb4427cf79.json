{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fede\\\\Desktop\\\\Proyecto\\\\registro-login\\\\src\\\\components\\\\forms\\\\Calificaciones.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Calificaciones.css\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport AnaliticoButton from \"../funciones/AnaliticoButton\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calificaciones = () => {\n  _s();\n  const [dni, setDni] = useState(\"\");\n  const [resultados, setResultados] = useState([]);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [curso, setCurso] = useState(\"\");\n  const [materia, setMateria] = useState(\"\");\n  const [lf, setLf] = useState(\"\");\n  const [fechaAprobacion, setFechaAprobacion] = useState(\"\");\n  const fechaAprobacionRef = useRef(null);\n  const [calificacionNumerica, setCalificacionNumerica] = useState(\"\");\n  const [calificacionLetras, setCalificacionLetras] = useState(\"\");\n  const [cursosDisponibles, setCursosDisponibles] = useState([]);\n  const [materiasDisponibles, setMateriasDisponibles] = useState([]);\n  const [carreraSeleccionada, setCarreraSeleccionada] = useState(\"\");\n  const [apNombre, setApNombre] = useState(\"\");\n  const [resolucion, setResolucion] = useState(\"\");\n  const [modoCursada, setModoCursada] = useState(false);\n  const [lfLocked, setLfLocked] = useState(false);\n  useEffect(() => {\n    if (curso) {\n      handleCursoChange({\n        target: {\n          value: curso\n        }\n      });\n    }\n  }, [curso]);\n  const handleSearch = async () => {\n    // Verifica que se haya ingresado DNI y que tenga 8 dígitos\n    if (!dni || dni.length < 8) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Error\",\n        text: \"Ingrese un DNI válido.\"\n      });\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/estudiantes/${dni}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      console.log(\"🔍 Estudiantes:\", response.data);\n      setResultados(response.data);\n      if (response.data.length > 0) {\n        const estudiante = response.data[0];\n        setApNombre(estudiante.nombre);\n        setCarreraSeleccionada(estudiante.carrera);\n        setResolucion(estudiante.resolucion);\n      }\n    } catch (error) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Error\",\n        text: \"No se encontró información para este DNI.\"\n      });\n      setResultados([]);\n    }\n  };\n  const handleCargarNotas = async (carrera, resolucionBusqueda) => {\n    console.log(\"✅ Cargando notas para la carrera:\", carrera);\n    setCarreraSeleccionada(carrera);\n    setResolucion(resolucionBusqueda); // Actualiza la resolución con el valor correcto\n    setMostrarFormulario(true);\n    await cargarCursos(carrera);\n  };\n  const cargarCursos = async carrera => {\n    try {\n      console.log(\"📡 Buscando cursos para la carrera:\", carrera);\n      const response = await axios.get(`http://localhost:5000/materias?carrera=${encodeURIComponent(carrera)}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      console.log(\"✅ Cursos obtenidos:\", response.data);\n      const añosUnicos = [...new Set(response.data.filter(materia => materia.carrera === carrera).map(materia => materia.anio))].sort();\n      setCursosDisponibles(añosUnicos);\n    } catch (error) {\n      console.error(\"❌ Error al obtener cursos:\", error);\n      setCursosDisponibles([]);\n    }\n  };\n  const handleCursoChange = async e => {\n    const anioSeleccionado = e.target.value.replace(\"º\", \"\").trim();\n    setCurso(anioSeleccionado);\n    console.log(`📡 (handleCursoChange) Año seleccionado: '${anioSeleccionado}'`);\n    console.log(`📡 (handleCursoChange) Carrera seleccionada: '${carreraSeleccionada}'`);\n    if (!carreraSeleccionada || !anioSeleccionado) {\n      console.warn(\"⚠️ No hay carrera o año seleccionados. No se hará la consulta.\");\n      return;\n    }\n    try {\n      const response = await axios.get(\"http://localhost:5000/materias\", {\n        params: {\n          carrera: carreraSeleccionada.trim(),\n          anio: anioSeleccionado\n        },\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      console.log(\"✅ (handleCursoChange) Materias obtenidas antes de filtrar:\", response.data);\n      const materiasFiltradas = response.data.filter(materia => materia.carrera.trim().toLowerCase() === carreraSeleccionada.trim().toLowerCase() && materia.anio === anioSeleccionado);\n      console.log(\"✅ (handleCursoChange) Materias filtradas en frontend:\", materiasFiltradas);\n      setMateriasDisponibles(materiasFiltradas.map(m => m.nombre_materia));\n    } catch (error) {\n      console.error(\"❌ (handleCursoChange) Error al obtener materias:\", error);\n      setMateriasDisponibles([]);\n    }\n  };\n\n  // Función para limpiar todos los campos del formulario (incluyendo el curso) al presionar Reset\n  const resetCamposFormulario = () => {\n    setCurso(\"\");\n    setMateria(\"\");\n    setLf(\"\");\n    setFechaAprobacion(\"\");\n    setCalificacionNumerica(\"\");\n    setCalificacionLetras(\"\");\n    setModoCursada(false);\n    if (fechaAprobacionRef.current) {\n      fechaAprobacionRef.current.type = \"text\";\n    }\n  };\n\n  // Función para limpiar el formulario después de guardar, conservando la selección de curso\n  const resetCamposPostSave = () => {\n    setMateria(\"\");\n    setLf(\"\");\n    setFechaAprobacion(\"\");\n    setCalificacionNumerica(\"\");\n    setCalificacionLetras(\"\");\n    setModoCursada(false);\n    if (fechaAprobacionRef.current) {\n      fechaAprobacionRef.current.type = \"text\";\n    }\n  };\n\n  // Función para volver a la vista de búsqueda\n  const volver = () => {\n    setDni(\"\");\n    setResultados([]);\n    setCurso(\"\");\n    setMateria(\"\");\n    setLf(\"\");\n    setFechaAprobacion(\"\");\n    setCalificacionNumerica(\"\");\n    setCalificacionLetras(\"\");\n    setCarreraSeleccionada(\"\");\n    setMateriasDisponibles([]);\n    setCursosDisponibles([]);\n    setApNombre(\"\");\n    setResolucion(\"\");\n    setMostrarFormulario(false);\n  };\n  const numberToWords = num => {\n    switch (num) {\n      case 1:\n        return \"Uno\";\n      case 2:\n        return \"Dos\";\n      case 3:\n        return \"Tres\";\n      case 4:\n        return \"Cuatro\";\n      case 5:\n        return \"Cinco\";\n      case 6:\n        return \"Seis\";\n      case 7:\n        return \"Siete\";\n      case 8:\n        return \"Ocho\";\n      case 9:\n        return \"Nueve\";\n      case 10:\n        return \"Diez\";\n      default:\n        return \"\";\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validar que todos los campos obligatorios estén completos\n    if (!curso || !materia || !lf || !fechaAprobacion || !calificacionNumerica) {\n      Swal.fire(\"Error\", \"Todos los campos son obligatorios\", \"error\");\n      return;\n    }\n\n    // Preparar los datos a enviar\n    const data = {\n      dni,\n      ap_nombre: apNombre,\n      carrera: carreraSeleccionada,\n      resolucion,\n      materia,\n      curso,\n      l_f: lf,\n      fecha_aprobacion: fechaAprobacion,\n      numeros: calificacionNumerica,\n      letras: calificacionLetras\n    };\n    try {\n      // Consulta para verificar si ya existe una calificación para ese DNI y materia\n      const existeResponse = await axios.get(\"http://localhost:5000/calificaciones\", {\n        params: {\n          dni,\n          materia\n        },\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (existeResponse.data && existeResponse.data.length > 0) {\n        // Extraer el registro existente y su id\n        const registroExistente = existeResponse.data[0];\n        const idRegistro = registroExistente.id;\n        console.log(\"ID obtenido:\", idRegistro);\n\n        // Preguntar si se desea sobreescribir\n        const confirmacion = await Swal.fire({\n          title: \"La materia ya se encuentra cargada\",\n          text: \"¿Desea sobreescribir?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonText: \"Aceptar\",\n          cancelButtonText: \"Cancelar\"\n        });\n        if (confirmacion.isConfirmed) {\n          // Ejecutar la actualización (PUT) usando el id obtenido\n          await axios.put(`http://localhost:5000/calificaciones/${idRegistro}`, data, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n            }\n          });\n          Swal.fire(\"¡Éxito!\", \"La calificación fue actualizada correctamente\", \"success\");\n        } else {\n          return;\n        }\n      } else {\n        // Si no existe, crear la calificación con POST\n        await axios.post(\"http://localhost:5000/calificaciones\", data, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        Swal.fire(\"¡Éxito!\", \"Datos almacenados correctamente\", \"success\");\n      }\n\n      // Reiniciar campos (excepto el curso)\n      resetCamposPostSave();\n    } catch (error) {\n      console.error(\"Error al almacenar los datos:\", error);\n      Swal.fire(\"Error\", \"No se pudieron almacenar los datos\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `calificaciones-component__container ${mostrarFormulario ? \"ocultar-fondo\" : \"\"}`,\n    children: !mostrarFormulario ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calificaciones-component__form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"dni\",\n          className: \"calificaciones-component__input\",\n          placeholder: \"Ingrese DNI\",\n          value: dni,\n          onChange: e => {\n            // Reemplaza todo lo que no sea dígito, toma solo los primeros 8 caracteres y actualiza el estado.\n            const numericValue = e.target.value.replace(/[^0-9]/g, '').slice(0, 8);\n            setDni(numericValue);\n          },\n          inputMode: \"numeric\",\n          maxLength: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"calificaciones-component__btn-primary btn-buscar\",\n          onClick: handleSearch,\n          disabled: !dni,\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), resultados.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calificaciones-component__result-container visible\",\n        children: resultados.map((resultado, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calificaciones-component__result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calificaciones-component__result-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Apellido y Nombre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), \" \", resultado.nombre]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Carrera:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), \" \", resultado.carrera]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Resoluci\\xF3n:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), \" \", resultado.resolucion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calificaciones-component__result-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCargarNotas(resultado.carrera, resultado.resolucion),\n              children: \"Cargar Notas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AnaliticoButton, {\n              dni: dni,\n              apNombre: apNombre,\n              carrera: resultado.carrera // o bien usar carreraSeleccionada si ya está en el estado\n              ,\n              resolucion: resultado.resolucion // o resolucion={resolucion} si se actualiza en el estado\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Porcentaje de Materias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calificaciones-formulario-notas\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"calificaciones-formulario__title\",\n        children: \"CARGA DE NOTAS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Carrera:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-group__input readonly\",\n            value: carreraSeleccionada,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calificaciones-formulario__grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Curso\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-group__input\",\n              value: curso,\n              onChange: handleCursoChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un curso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), cursosDisponibles.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"No hay cursos disponibles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this) : cursosDisponibles.map((curso, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: curso,\n                children: [curso, \"\\xBA\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Materia\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-group__input\",\n              value: materia,\n              onChange: e => setMateria(e.target.value),\n              disabled: !curso,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione una materia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), materiasDisponibles.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"No hay materias disponibles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this) : materiasDisponibles.map((materia, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: materia,\n                children: materia\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"L/F\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-group__input lf-input\",\n              value: lf,\n              placeholder: \"Libro/Folio\",\n              onChange: e => {\n                const newValue = e.target.value;\n                const inputType = e.nativeEvent.inputType || \"\";\n                if (newValue === \"\") {\n                  setLf(\"\");\n                  setModoCursada(false);\n                  setLfLocked(false);\n                  setCalificacionNumerica(\"\");\n                  setCalificacionLetras(\"\");\n                  setFechaAprobacion(\"\");\n                  return;\n                }\n                if ((lf === \"Cursada Aprobada\" || lf === \"Debe Cursar\") && inputType.includes(\"delete\")) {\n                  setLf(\"\");\n                  setModoCursada(false);\n                  setLfLocked(false);\n                  setCalificacionNumerica(\"\");\n                  setCalificacionLetras(\"\");\n                  setFechaAprobacion(\"\");\n                  return;\n                }\n                const selectionStart = e.target.selectionStart;\n                const selectionEnd = e.target.selectionEnd;\n                const isAllSelected = selectionStart === 0 && selectionEnd === lf.length;\n                if (isAllSelected && newValue.toUpperCase() === \"C\") {\n                  setModoCursada(true);\n                  setLf(\"Cursada Aprobada\");\n                  setCalificacionNumerica(\"---\");\n                  setCalificacionLetras(\"---\");\n                  setFechaAprobacion(\"\");\n                  return;\n                }\n                if (isAllSelected && newValue.toUpperCase() === \"D\") {\n                  setModoCursada(true);\n                  setLf(\"Debe Cursar\");\n                  setLfLocked(true);\n                  setFechaAprobacion(\"---\");\n                  setCalificacionNumerica(\"---\");\n                  setCalificacionLetras(\"---\");\n                  return;\n                }\n                if (newValue.toUpperCase() === \"C\") {\n                  setModoCursada(true);\n                  setLf(\"Cursada Aprobada\");\n                  setCalificacionNumerica(\"---\");\n                  setCalificacionLetras(\"---\");\n                  setFechaAprobacion(\"\");\n                  return;\n                }\n                if (newValue.toUpperCase() === \"D\") {\n                  setModoCursada(true);\n                  setLf(\"Debe Cursar\");\n                  setLfLocked(true);\n                  setFechaAprobacion(\"---\");\n                  setCalificacionNumerica(\"---\");\n                  setCalificacionLetras(\"---\");\n                  return;\n                }\n                if (newValue.length < lf.length) {\n                  setLf(newValue);\n                  if (newValue !== \"Cursada Aprobada\" && newValue !== \"Debe Cursar\") {\n                    setModoCursada(false);\n                    setLfLocked(false);\n                    setCalificacionNumerica(\"\");\n                    setCalificacionLetras(\"\");\n                  }\n                  return;\n                }\n                const regex = /^(?:[1-9]\\d{0,2})(?:\\/(?:[1-9]\\d{0,2})?)?$/;\n                if (regex.test(newValue)) {\n                  setLf(newValue);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Fecha de aprobaci\\xF3n\", /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fechaAprobacionRef,\n              type: \"text\",\n              placeholder: \"Seleccione fecha\",\n              className: \"form-group__input fecha-aprobacion\",\n              value: fechaAprobacion\n              // Si L/F es \"Debe Cursar\", la fecha se mantiene bloqueada\n              ,\n              readOnly: lf === \"Debe Cursar\",\n              onFocus: e => {\n                if (lf !== \"Debe Cursar\") {\n                  // Al hacer foco, se cambia a tipo \"date\" para mostrar el selector\n                  e.target.type = \"date\";\n                }\n              },\n              onBlur: e => {\n                // Si no se ha seleccionado ningún valor, se vuelve a \"text\" para mostrar el placeholder\n                if (!e.target.value) {\n                  e.target.type = \"text\";\n                } else {\n                  // Si se ingresó una fecha, verificamos el año\n                  const partes = e.target.value.split(\"-\");\n                  if (partes.length === 3) {\n                    const year = parseInt(partes[0], 10);\n                    if (year < 2010) {\n                      // Si el año es menor a 2010, reiniciamos el input\n                      setFechaAprobacion(\"\");\n                      e.target.type = \"text\";\n                      // Opcional: Puedes notificar al usuario con un mensaje (por ejemplo, con SweetAlert)\n                      return;\n                    }\n                  }\n                }\n              },\n              onChange: e => {\n                if (lf !== \"Debe Cursar\") {\n                  let value = e.target.value;\n                  // Opcional: si se quiere limitar el año a 4 dígitos\n                  const partes = value.split(\"-\");\n                  if (partes.length > 0) {\n                    if (partes[0].length > 4) {\n                      partes[0] = partes[0].slice(0, 4);\n                      value = partes.join(\"-\");\n                    }\n                  }\n                  setFechaAprobacion(value);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Calificaci\\xF3n\", modoCursada ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-group__input\",\n              value: \"---\",\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-group__input\",\n              value: calificacionNumerica,\n              placeholder: \"En n\\xFAmeros\",\n              min: \"1\",\n              max: \"10\",\n              onChange: e => {\n                const newValue = e.target.value;\n                if (newValue === \"\") {\n                  setCalificacionNumerica(\"\");\n                  setCalificacionLetras(\"\");\n                  return;\n                }\n                if (!/^(10|[1-9])$/.test(newValue)) {\n                  return;\n                }\n                setCalificacionNumerica(newValue);\n                setCalificacionLetras(numberToWords(parseInt(newValue, 10)));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Calificaci\\xF3n\", modoCursada ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-group__input\",\n              value: \"---\",\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-group__input\",\n              placeholder: \"En letras\",\n              value: calificacionLetras,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"calificaciones-component__btn-primary btn-volver\",\n            onClick: volver,\n            children: \"Volver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"calificaciones-component__btn-primary btn-guardar\",\n            children: \"Guardar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"calificaciones-component__btn-primary btn-reset\",\n            onClick: resetCamposFormulario,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(Calificaciones, \"lauv/y4r0xstnyOqE1/hXOntM1I=\");\n_c = Calificaciones;\nexport default Calificaciones;\nvar _c;\n$RefreshReg$(_c, \"Calificaciones\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Swal","AnaliticoButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Calificaciones","_s","dni","setDni","resultados","setResultados","mostrarFormulario","setMostrarFormulario","curso","setCurso","materia","setMateria","lf","setLf","fechaAprobacion","setFechaAprobacion","fechaAprobacionRef","calificacionNumerica","setCalificacionNumerica","calificacionLetras","setCalificacionLetras","cursosDisponibles","setCursosDisponibles","materiasDisponibles","setMateriasDisponibles","carreraSeleccionada","setCarreraSeleccionada","apNombre","setApNombre","resolucion","setResolucion","modoCursada","setModoCursada","lfLocked","setLfLocked","handleCursoChange","target","value","handleSearch","length","fire","icon","title","text","response","get","headers","Authorization","localStorage","getItem","console","log","data","estudiante","nombre","carrera","error","handleCargarNotas","resolucionBusqueda","cargarCursos","encodeURIComponent","añosUnicos","Set","filter","map","anio","sort","e","anioSeleccionado","replace","trim","warn","params","materiasFiltradas","toLowerCase","m","nombre_materia","resetCamposFormulario","current","type","resetCamposPostSave","volver","numberToWords","num","handleSubmit","preventDefault","ap_nombre","l_f","fecha_aprobacion","numeros","letras","existeResponse","registroExistente","idRegistro","id","confirmacion","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","put","post","className","children","placeholder","onChange","numericValue","slice","inputMode","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","resultado","index","onSubmit","readOnly","newValue","inputType","nativeEvent","includes","selectionStart","selectionEnd","isAllSelected","toUpperCase","regex","test","ref","onFocus","onBlur","partes","split","year","parseInt","join","min","max","_c","$RefreshReg$"],"sources":["C:/Users/Fede/Desktop/Proyecto/registro-login/src/components/forms/Calificaciones.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Calificaciones.css\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport AnaliticoButton from \"../funciones/AnaliticoButton\";\r\n\r\n\r\nconst Calificaciones = () => {\r\n  const [dni, setDni] = useState(\"\");\r\n  const [resultados, setResultados] = useState([]);\r\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\r\n  const [curso, setCurso] = useState(\"\");\r\n  const [materia, setMateria] = useState(\"\");\r\n  const [lf, setLf] = useState(\"\");\r\n  const [fechaAprobacion, setFechaAprobacion] = useState(\"\");\r\n  const fechaAprobacionRef = useRef(null);\r\n  const [calificacionNumerica, setCalificacionNumerica] = useState(\"\");\r\n  const [calificacionLetras, setCalificacionLetras] = useState(\"\");\r\n  const [cursosDisponibles, setCursosDisponibles] = useState([]);\r\n  const [materiasDisponibles, setMateriasDisponibles] = useState([]);\r\n  const [carreraSeleccionada, setCarreraSeleccionada] = useState(\"\");\r\n  const [apNombre, setApNombre] = useState(\"\");\r\n  const [resolucion, setResolucion] = useState(\"\");\r\n  const [modoCursada, setModoCursada] = useState(false);\r\n  const [lfLocked, setLfLocked] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (curso) {\r\n      handleCursoChange({ target: { value: curso } });\r\n    }\r\n  }, [curso]);\r\n\r\n  const handleSearch = async () => {\r\n    // Verifica que se haya ingresado DNI y que tenga 8 dígitos\r\n    if (!dni || dni.length < 8) {\r\n      Swal.fire({ icon: \"error\", title: \"Error\", text: \"Ingrese un DNI válido.\" });\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/estudiantes/${dni}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      console.log(\"🔍 Estudiantes:\", response.data);\r\n      setResultados(response.data);\r\n  \r\n      if (response.data.length > 0) {\r\n        const estudiante = response.data[0];\r\n        setApNombre(estudiante.nombre);\r\n        setCarreraSeleccionada(estudiante.carrera);\r\n        setResolucion(estudiante.resolucion);\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({ icon: \"error\", title: \"Error\", text: \"No se encontró información para este DNI.\" });\r\n      setResultados([]);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleCargarNotas = async (carrera, resolucionBusqueda) => {\r\n    console.log(\"✅ Cargando notas para la carrera:\", carrera);\r\n    setCarreraSeleccionada(carrera);\r\n    setResolucion(resolucionBusqueda); // Actualiza la resolución con el valor correcto\r\n    setMostrarFormulario(true);\r\n    await cargarCursos(carrera);\r\n  };\r\n  \r\n\r\n  const cargarCursos = async (carrera) => {\r\n    try {\r\n      console.log(\"📡 Buscando cursos para la carrera:\", carrera);\r\n      const response = await axios.get(\r\n        `http://localhost:5000/materias?carrera=${encodeURIComponent(carrera)}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        }\r\n      );\r\n\r\n      console.log(\"✅ Cursos obtenidos:\", response.data);\r\n\r\n      const añosUnicos = [\r\n        ...new Set(\r\n          response.data\r\n            .filter((materia) => materia.carrera === carrera)\r\n            .map((materia) => materia.anio)\r\n        ),\r\n      ].sort();\r\n\r\n      setCursosDisponibles(añosUnicos);\r\n    } catch (error) {\r\n      console.error(\"❌ Error al obtener cursos:\", error);\r\n      setCursosDisponibles([]);\r\n    }\r\n  };\r\n\r\n  const handleCursoChange = async (e) => {\r\n    const anioSeleccionado = e.target.value.replace(\"º\", \"\").trim();\r\n    setCurso(anioSeleccionado);\r\n\r\n    console.log(`📡 (handleCursoChange) Año seleccionado: '${anioSeleccionado}'`);\r\n    console.log(`📡 (handleCursoChange) Carrera seleccionada: '${carreraSeleccionada}'`);\r\n\r\n    if (!carreraSeleccionada || !anioSeleccionado) {\r\n      console.warn(\"⚠️ No hay carrera o año seleccionados. No se hará la consulta.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/materias\", {\r\n        params: {\r\n          carrera: carreraSeleccionada.trim(),\r\n          anio: anioSeleccionado,\r\n        },\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      console.log(\"✅ (handleCursoChange) Materias obtenidas antes de filtrar:\", response.data);\r\n\r\n      const materiasFiltradas = response.data.filter(\r\n        (materia) =>\r\n          materia.carrera.trim().toLowerCase() ===\r\n          carreraSeleccionada.trim().toLowerCase() &&\r\n          materia.anio === anioSeleccionado\r\n      );\r\n\r\n      console.log(\"✅ (handleCursoChange) Materias filtradas en frontend:\", materiasFiltradas);\r\n\r\n      setMateriasDisponibles(materiasFiltradas.map((m) => m.nombre_materia));\r\n    } catch (error) {\r\n      console.error(\"❌ (handleCursoChange) Error al obtener materias:\", error);\r\n      setMateriasDisponibles([]);\r\n    }\r\n  };\r\n\r\n  // Función para limpiar todos los campos del formulario (incluyendo el curso) al presionar Reset\r\n  const resetCamposFormulario = () => {\r\n    setCurso(\"\");\r\n    setMateria(\"\");\r\n    setLf(\"\");\r\n    setFechaAprobacion(\"\");\r\n    setCalificacionNumerica(\"\");\r\n    setCalificacionLetras(\"\");\r\n    setModoCursada(false);\r\n\r\n    if (fechaAprobacionRef.current) {\r\n      fechaAprobacionRef.current.type = \"text\";\r\n    }\r\n  };\r\n\r\n  // Función para limpiar el formulario después de guardar, conservando la selección de curso\r\n  const resetCamposPostSave = () => {\r\n    setMateria(\"\");\r\n    setLf(\"\");\r\n    setFechaAprobacion(\"\");\r\n    setCalificacionNumerica(\"\");\r\n    setCalificacionLetras(\"\");\r\n    setModoCursada(false);\r\n\r\n    if (fechaAprobacionRef.current) {\r\n      fechaAprobacionRef.current.type = \"text\";\r\n    }\r\n  };\r\n\r\n  // Función para volver a la vista de búsqueda\r\n  const volver = () => {\r\n    setDni(\"\");\r\n    setResultados([]);\r\n    setCurso(\"\");\r\n    setMateria(\"\");\r\n    setLf(\"\");\r\n    setFechaAprobacion(\"\");\r\n    setCalificacionNumerica(\"\");\r\n    setCalificacionLetras(\"\");\r\n    setCarreraSeleccionada(\"\");\r\n    setMateriasDisponibles([]);\r\n    setCursosDisponibles([]);\r\n    setApNombre(\"\");\r\n    setResolucion(\"\");\r\n    setMostrarFormulario(false);\r\n  };\r\n\r\n  const numberToWords = (num) => {\r\n    switch (num) {\r\n      case 1:\r\n        return \"Uno\";\r\n      case 2:\r\n        return \"Dos\";\r\n      case 3:\r\n        return \"Tres\";\r\n      case 4:\r\n        return \"Cuatro\";\r\n      case 5:\r\n        return \"Cinco\";\r\n      case 6:\r\n        return \"Seis\";\r\n      case 7:\r\n        return \"Siete\";\r\n      case 8:\r\n        return \"Ocho\";\r\n      case 9:\r\n        return \"Nueve\";\r\n      case 10:\r\n        return \"Diez\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Validar que todos los campos obligatorios estén completos\r\n    if (!curso || !materia || !lf || !fechaAprobacion || !calificacionNumerica) {\r\n      Swal.fire(\"Error\", \"Todos los campos son obligatorios\", \"error\");\r\n      return;\r\n    }\r\n  \r\n    // Preparar los datos a enviar\r\n    const data = {\r\n      dni,\r\n      ap_nombre: apNombre,\r\n      carrera: carreraSeleccionada,\r\n      resolucion,\r\n      materia,\r\n      curso,\r\n      l_f: lf,\r\n      fecha_aprobacion: fechaAprobacion,\r\n      numeros: calificacionNumerica,\r\n      letras: calificacionLetras,\r\n    };\r\n  \r\n    try {\r\n      // Consulta para verificar si ya existe una calificación para ese DNI y materia\r\n      const existeResponse = await axios.get(\"http://localhost:5000/calificaciones\", {\r\n        params: { dni, materia },\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n  \r\n      if (existeResponse.data && existeResponse.data.length > 0) {\r\n        // Extraer el registro existente y su id\r\n        const registroExistente = existeResponse.data[0];\r\n        const idRegistro = registroExistente.id;\r\n        console.log(\"ID obtenido:\", idRegistro);\r\n  \r\n        // Preguntar si se desea sobreescribir\r\n        const confirmacion = await Swal.fire({\r\n          title: \"La materia ya se encuentra cargada\",\r\n          text: \"¿Desea sobreescribir?\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Aceptar\",\r\n          cancelButtonText: \"Cancelar\",\r\n        });\r\n  \r\n        if (confirmacion.isConfirmed) {\r\n          // Ejecutar la actualización (PUT) usando el id obtenido\r\n          await axios.put(`http://localhost:5000/calificaciones/${idRegistro}`, data, {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n          });\r\n          Swal.fire(\"¡Éxito!\", \"La calificación fue actualizada correctamente\", \"success\");\r\n        } else {\r\n          return;\r\n        }\r\n      } else {\r\n        // Si no existe, crear la calificación con POST\r\n        await axios.post(\"http://localhost:5000/calificaciones\", data, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        });\r\n        Swal.fire(\"¡Éxito!\", \"Datos almacenados correctamente\", \"success\");\r\n      }\r\n  \r\n      // Reiniciar campos (excepto el curso)\r\n      resetCamposPostSave();\r\n    } catch (error) {\r\n      console.error(\"Error al almacenar los datos:\", error);\r\n      Swal.fire(\"Error\", \"No se pudieron almacenar los datos\", \"error\");\r\n    }\r\n  }; \r\n\r\n  return (\r\n    <div className={`calificaciones-component__container ${mostrarFormulario ? \"ocultar-fondo\" : \"\"}`}>\r\n      {!mostrarFormulario ? (\r\n        <>\r\n          <div className=\"calificaciones-component__form-group\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"dni\"\r\n            className=\"calificaciones-component__input\"\r\n            placeholder=\"Ingrese DNI\"\r\n            value={dni}\r\n            onChange={(e) => {\r\n              // Reemplaza todo lo que no sea dígito, toma solo los primeros 8 caracteres y actualiza el estado.\r\n              const numericValue = e.target.value.replace(/[^0-9]/g, '').slice(0, 8);\r\n              setDni(numericValue);\r\n            }}\r\n            inputMode=\"numeric\"\r\n            maxLength=\"8\"\r\n          />\r\n\r\n            <button\r\n              className=\"calificaciones-component__btn-primary btn-buscar\"\r\n              onClick={handleSearch}\r\n              disabled={!dni}\r\n            >\r\n              Buscar\r\n            </button>\r\n          </div>\r\n\r\n          {resultados.length > 0 && (\r\n            <div className=\"calificaciones-component__result-container visible\">\r\n              {resultados.map((resultado, index) => (\r\n            <div key={index} className=\"calificaciones-component__result-item\">\r\n              <div className=\"calificaciones-component__result-text\">\r\n                <p>\r\n                  <strong>Apellido y Nombre:</strong> {resultado.nombre}\r\n                </p>\r\n                <p>\r\n                  <strong>Carrera:</strong> {resultado.carrera}\r\n                </p>\r\n                <p>\r\n                  <strong>Resolución:</strong> {resultado.resolucion}\r\n                </p>\r\n              </div>\r\n              <div className=\"calificaciones-component__result-buttons\">\r\n                <button onClick={() => handleCargarNotas(resultado.carrera, resultado.resolucion)}>\r\n                  Cargar Notas\r\n                </button>\r\n                <AnaliticoButton\r\n                  dni={dni}\r\n                  apNombre={apNombre}\r\n                  carrera={resultado.carrera}  // o bien usar carreraSeleccionada si ya está en el estado\r\n                  resolucion={resultado.resolucion} // o resolucion={resolucion} si se actualiza en el estado\r\n                />\r\n                <button>Porcentaje de Materias</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"calificaciones-formulario-notas\">\r\n          <h2 className=\"calificaciones-formulario__title\">CARGA DE NOTAS</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>\r\n              Carrera:\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-group__input readonly\"\r\n                value={carreraSeleccionada}\r\n                readOnly\r\n              />\r\n            </label>\r\n\r\n            <div className=\"calificaciones-formulario__grid\">\r\n              <label>\r\n                Curso\r\n                <select className=\"form-group__input\" value={curso} onChange={handleCursoChange}>\r\n                  <option value=\"\">Seleccione un curso</option>\r\n                  {cursosDisponibles.length === 0 ? (\r\n                    <option value=\"\" disabled>\r\n                      No hay cursos disponibles\r\n                    </option>\r\n                  ) : (\r\n                    cursosDisponibles.map((curso, index) => (\r\n                      <option key={index} value={curso}>\r\n                        {curso}º\r\n                      </option>\r\n                    ))\r\n                  )}\r\n                </select>\r\n              </label>\r\n\r\n              <label>\r\n                Materia\r\n                <select\r\n                  className=\"form-group__input\"\r\n                  value={materia}\r\n                  onChange={(e) => setMateria(e.target.value)}\r\n                  disabled={!curso}\r\n                >\r\n                  <option value=\"\">Seleccione una materia</option>\r\n                  {materiasDisponibles.length === 0 ? (\r\n                    <option value=\"\" disabled>\r\n                      No hay materias disponibles\r\n                    </option>\r\n                  ) : (\r\n                    materiasDisponibles.map((materia, index) => (\r\n                      <option key={index} value={materia}>\r\n                        {materia}\r\n                      </option>\r\n                    ))\r\n                  )}\r\n                </select>\r\n              </label>\r\n              \r\n              <label>\r\n              L/F\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-group__input lf-input\"\r\n                value={lf}\r\n                placeholder=\"Libro/Folio\"\r\n                onChange={(e) => {\r\n                  const newValue = e.target.value;\r\n                  const inputType = e.nativeEvent.inputType || \"\";\r\n\r\n                   \r\n                  if (newValue === \"\") {\r\n                    setLf(\"\");\r\n                    setModoCursada(false);\r\n                    setLfLocked(false);\r\n                    setCalificacionNumerica(\"\");\r\n                    setCalificacionLetras(\"\");\r\n                    setFechaAprobacion(\"\");\r\n                    return;\r\n                  }\r\n\r\n                   \r\n                  if ((lf === \"Cursada Aprobada\" || lf === \"Debe Cursar\") && inputType.includes(\"delete\")) {\r\n                    setLf(\"\");\r\n                    setModoCursada(false);\r\n                    setLfLocked(false);\r\n                    setCalificacionNumerica(\"\");\r\n                    setCalificacionLetras(\"\");\r\n                    setFechaAprobacion(\"\");\r\n                    return;\r\n                  }\r\n\r\n                   \r\n                  const selectionStart = e.target.selectionStart;\r\n                  const selectionEnd = e.target.selectionEnd;\r\n                  const isAllSelected = (selectionStart === 0 && selectionEnd === lf.length);\r\n\r\n                  \r\n                  if (isAllSelected && newValue.toUpperCase() === \"C\") {\r\n                    setModoCursada(true);\r\n                    setLf(\"Cursada Aprobada\");\r\n                    setCalificacionNumerica(\"---\");\r\n                    setCalificacionLetras(\"---\");\r\n                    setFechaAprobacion(\"\");\r\n                    return;\r\n                  }\r\n\r\n                   \r\n                  if (isAllSelected && newValue.toUpperCase() === \"D\") {\r\n                    setModoCursada(true);\r\n                    setLf(\"Debe Cursar\");\r\n                    setLfLocked(true);\r\n                    setFechaAprobacion(\"---\");\r\n                    setCalificacionNumerica(\"---\");\r\n                    setCalificacionLetras(\"---\");\r\n                    return;\r\n                  }\r\n\r\n                   \r\n                  if (newValue.toUpperCase() === \"C\") {\r\n                    setModoCursada(true);\r\n                    setLf(\"Cursada Aprobada\");\r\n                    setCalificacionNumerica(\"---\");\r\n                    setCalificacionLetras(\"---\");\r\n                    setFechaAprobacion(\"\");\r\n                    return;\r\n                  }\r\n\r\n                   \r\n                  if (newValue.toUpperCase() === \"D\") {\r\n                    setModoCursada(true);\r\n                    setLf(\"Debe Cursar\");\r\n                    setLfLocked(true);\r\n                    setFechaAprobacion(\"---\");\r\n                    setCalificacionNumerica(\"---\");\r\n                    setCalificacionLetras(\"---\");\r\n                    return;\r\n                  }\r\n\r\n           \r\n                  if (newValue.length < lf.length) {\r\n                    setLf(newValue);\r\n                    if (newValue !== \"Cursada Aprobada\" && newValue !== \"Debe Cursar\") {\r\n                      setModoCursada(false);\r\n                      setLfLocked(false);\r\n                      setCalificacionNumerica(\"\");\r\n                      setCalificacionLetras(\"\");\r\n                    }\r\n                    return;\r\n                  }\r\n\r\n         \r\n                  const regex = /^(?:[1-9]\\d{0,2})(?:\\/(?:[1-9]\\d{0,2})?)?$/;\r\n                  if (regex.test(newValue)) {\r\n                    setLf(newValue);\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Fecha de aprobación\r\n              <input\r\n                ref={fechaAprobacionRef}\r\n                type=\"text\"\r\n                placeholder=\"Seleccione fecha\"\r\n                className=\"form-group__input fecha-aprobacion\"\r\n                value={fechaAprobacion}\r\n                // Si L/F es \"Debe Cursar\", la fecha se mantiene bloqueada\r\n                readOnly={lf === \"Debe Cursar\"}\r\n                onFocus={(e) => {\r\n                  if (lf !== \"Debe Cursar\") {\r\n                    // Al hacer foco, se cambia a tipo \"date\" para mostrar el selector\r\n                    e.target.type = \"date\";\r\n                  }\r\n                }}\r\n                onBlur={(e) => {\r\n                  // Si no se ha seleccionado ningún valor, se vuelve a \"text\" para mostrar el placeholder\r\n                  if (!e.target.value) {\r\n                    e.target.type = \"text\";\r\n                  } else {\r\n                    // Si se ingresó una fecha, verificamos el año\r\n                    const partes = e.target.value.split(\"-\");\r\n                    if (partes.length === 3) {\r\n                      const year = parseInt(partes[0], 10);\r\n                      if (year < 2010) {\r\n                        // Si el año es menor a 2010, reiniciamos el input\r\n                        setFechaAprobacion(\"\");\r\n                        e.target.type = \"text\";\r\n                        // Opcional: Puedes notificar al usuario con un mensaje (por ejemplo, con SweetAlert)\r\n                        return;\r\n                      }\r\n                    }\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  if (lf !== \"Debe Cursar\") {\r\n                    let value = e.target.value;\r\n                    // Opcional: si se quiere limitar el año a 4 dígitos\r\n                    const partes = value.split(\"-\");\r\n                    if (partes.length > 0) {\r\n                      if (partes[0].length > 4) {\r\n                        partes[0] = partes[0].slice(0, 4);\r\n                        value = partes.join(\"-\");\r\n                      }\r\n                    }\r\n                    setFechaAprobacion(value);\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n\r\n              <label>\r\n                Calificación\r\n                {modoCursada ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-group__input\"\r\n                    value=\"---\"\r\n                    readOnly\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-group__input\"\r\n                    value={calificacionNumerica}\r\n                    placeholder=\"En números\"\r\n                    min=\"1\"\r\n                    max=\"10\"\r\n                    onChange={(e) => {\r\n                      const newValue = e.target.value;\r\n                      if (newValue === \"\") {\r\n                        setCalificacionNumerica(\"\");\r\n                        setCalificacionLetras(\"\");\r\n                        return;\r\n                      }\r\n                      if (!/^(10|[1-9])$/.test(newValue)) {\r\n                        return;\r\n                      }\r\n                      setCalificacionNumerica(newValue);\r\n                      setCalificacionLetras(numberToWords(parseInt(newValue, 10)));\r\n                    }}\r\n                  />\r\n                )}\r\n              </label>\r\n\r\n              <label>\r\n                Calificación\r\n                {modoCursada ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-group__input\"\r\n                    value=\"---\"\r\n                    readOnly\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-group__input\"\r\n                    placeholder=\"En letras\"\r\n                    value={calificacionLetras}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-buttons\">\r\n            <button type=\"button\" className=\"calificaciones-component__btn-primary btn-volver\" onClick={volver}>\r\n              Volver\r\n            </button>\r\n            <button type=\"submit\" className=\"calificaciones-component__btn-primary btn-guardar\">\r\n              Guardar\r\n            </button>\r\n            <button type=\"reset\" className=\"calificaciones-component__btn-primary btn-reset\" onClick={resetCamposFormulario}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calificaciones;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}