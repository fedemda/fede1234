{"ast":null,"code":"import React from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AnaliticoButton=_ref=>{let{dni,apNombre,carrera,resolucion}=_ref;const handleDescargarAnalitico=async()=>{try{const plantilla=carrera&&carrera.toLowerCase().includes(\"prof\")?\"Analitico_Profesorado.xlsx\"// Para Profesorado\n:\"Analitico_Tecnicatura.xlsx\";// Para Tecnicatura\nconst response=await axios.get(\"http://localhost:5000/generar-analitico\",{params:{dni,apNombre,archivo:plantilla,resolucion,carrera},responseType:\"blob\"// Para manejar la respuesta como archivo\n});// Extraer el nombre del archivo desde la cabecera Content-Disposition\nconst disposition=response.headers[\"content-disposition\"];let fileName=\"\";if(disposition){const filenameRegex=/filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;const matches=filenameRegex.exec(disposition);if(matches!=null&&matches[1]){fileName=matches[1].replace(/['\"]/g,\"\");}}// Si no se obtuvo el nombre, se crea uno usando el formato deseado\nif(!fileName){const apNombreSafe=apNombre.trim();const carreraSafe=carrera.trim();fileName=`Analitico Parcial_${apNombreSafe}_${carreraSafe}.xlsx`;}// Crear URL del Blob y simular clic para descargar\nconst url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement(\"a\");link.href=url;link.setAttribute(\"download\",fileName);document.body.appendChild(link);link.click();link.remove();}catch(error){console.error(\"Error al descargar el analítico:\",error);}};return/*#__PURE__*/_jsx(\"button\",{onClick:handleDescargarAnalitico,children:\"Anal\\xEDtico Parcial\"});};export default AnaliticoButton;","map":{"version":3,"names":["React","axios","jsx","_jsx","AnaliticoButton","_ref","dni","apNombre","carrera","resolucion","handleDescargarAnalitico","plantilla","toLowerCase","includes","response","get","params","archivo","responseType","disposition","headers","fileName","filenameRegex","matches","exec","replace","apNombreSafe","trim","carreraSafe","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","remove","error","console","onClick","children"],"sources":["C:/Users/Fede/Desktop/Proyecto/registro-login/src/components/funciones/AnaliticoButton.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AnaliticoButton = ({ dni, apNombre, carrera, resolucion }) => {\r\n  const handleDescargarAnalitico = async () => {\r\n    try {\r\n      const plantilla = carrera && carrera.toLowerCase().includes(\"prof\")\r\n        ? \"Analitico_Profesorado.xlsx\"  // Para Profesorado\r\n        : \"Analitico_Tecnicatura.xlsx\"; // Para Tecnicatura\r\n\r\n      const response = await axios.get(\"http://localhost:5000/generar-analitico\", {\r\n        params: { dni, apNombre, archivo: plantilla, resolucion, carrera },\r\n        responseType: \"blob\", // Para manejar la respuesta como archivo\r\n      });\r\n\r\n      // Extraer el nombre del archivo desde la cabecera Content-Disposition\r\n      const disposition = response.headers[\"content-disposition\"];\r\n      let fileName = \"\";\r\n      if (disposition) {\r\n        const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\r\n        const matches = filenameRegex.exec(disposition);\r\n        if (matches != null && matches[1]) {\r\n          fileName = matches[1].replace(/['\"]/g, \"\");\r\n        }\r\n      }\r\n      // Si no se obtuvo el nombre, se crea uno usando el formato deseado\r\n      if (!fileName) {\r\n        const apNombreSafe = apNombre.trim();\r\n        const carreraSafe = carrera.trim();\r\n        fileName = `Analitico Parcial_${apNombreSafe}_${carreraSafe}.xlsx`;\r\n      }\r\n\r\n      // Crear URL del Blob y simular clic para descargar\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", fileName);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error(\"Error al descargar el analítico:\", error);\r\n    }\r\n  };\r\n\r\n  return <button onClick={handleDescargarAnalitico}>Analítico Parcial</button>;\r\n};\r\n\r\nexport default AnaliticoButton;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,GAAG,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,UAAW,CAAC,CAAAJ,IAAA,CAC7D,KAAM,CAAAK,wBAAwB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACF,KAAM,CAAAC,SAAS,CAAGH,OAAO,EAAIA,OAAO,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,CAC/D,4BAA8B;AAAA,CAC9B,4BAA4B,CAAE;AAElC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,KAAK,CAACc,GAAG,CAAC,yCAAyC,CAAE,CAC1EC,MAAM,CAAE,CAAEV,GAAG,CAAEC,QAAQ,CAAEU,OAAO,CAAEN,SAAS,CAAEF,UAAU,CAAED,OAAQ,CAAC,CAClEU,YAAY,CAAE,MAAQ;AACxB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,WAAW,CAAGL,QAAQ,CAACM,OAAO,CAAC,qBAAqB,CAAC,CAC3D,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,GAAIF,WAAW,CAAE,CACf,KAAM,CAAAG,aAAa,CAAG,wCAAwC,CAC9D,KAAM,CAAAC,OAAO,CAAGD,aAAa,CAACE,IAAI,CAACL,WAAW,CAAC,CAC/C,GAAII,OAAO,EAAI,IAAI,EAAIA,OAAO,CAAC,CAAC,CAAC,CAAE,CACjCF,QAAQ,CAAGE,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAC5C,CACF,CACA;AACA,GAAI,CAACJ,QAAQ,CAAE,CACb,KAAM,CAAAK,YAAY,CAAGnB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CACpC,KAAM,CAAAC,WAAW,CAAGpB,OAAO,CAACmB,IAAI,CAAC,CAAC,CAClCN,QAAQ,CAAG,qBAAqBK,YAAY,IAAIE,WAAW,OAAO,CACpE,CAEA;AACA,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,GAAI,CAAAC,IAAI,CAAC,CAACnB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAAC,CACjE,KAAM,CAAAC,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGT,GAAG,CACfM,IAAI,CAACI,YAAY,CAAC,UAAU,CAAElB,QAAQ,CAAC,CACvCe,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CACZP,IAAI,CAACQ,MAAM,CAAC,CAAC,CACf,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CAC1D,CACF,CAAC,CAED,mBAAOzC,IAAA,WAAQ2C,OAAO,CAAEpC,wBAAyB,CAAAqC,QAAA,CAAC,sBAAiB,CAAQ,CAAC,CAC9E,CAAC,CAED,cAAe,CAAA3C,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}