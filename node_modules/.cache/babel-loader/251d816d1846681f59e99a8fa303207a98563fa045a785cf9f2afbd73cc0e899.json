{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fede\\\\Desktop\\\\Proyecto\\\\registro-login\\\\src\\\\components\\\\funciones\\\\AnaliticoButton.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnaliticoButton = ({\n  dni,\n  apNombre,\n  carrera,\n  resolucion\n}) => {\n  const handleDescargarAnalitico = async () => {\n    try {\n      const plantilla = carrera && carrera.toLowerCase().includes(\"prof\") ? \"Analitico_Profesorado.xlsx\" // Para Profesorado\n      : \"Analitico_Tecnicatura.xlsx\"; // Para Tecnicatura\n\n      const response = await axios.get(\"http://localhost:5000/generar-analitico\", {\n        params: {\n          dni,\n          apNombre,\n          archivo: plantilla,\n          resolucion,\n          carrera\n        },\n        responseType: \"blob\" // Para manejar la respuesta como archivo\n      });\n\n      // Extraer el nombre del archivo desde la cabecera Content-Disposition\n      const disposition = response.headers[\"content-disposition\"];\n      let fileName = \"\";\n      if (disposition) {\n        const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n        const matches = filenameRegex.exec(disposition);\n        if (matches != null && matches[1]) {\n          fileName = matches[1].replace(/['\"]/g, \"\");\n        }\n      }\n      // Si no se obtuvo el nombre, se crea uno usando el formato deseado\n      if (!fileName) {\n        const apNombreSafe = apNombre.trim();\n        const carreraSafe = carrera.trim();\n        fileName = `Analitico Parcial_${apNombreSafe}_${carreraSafe}.xlsx`;\n      }\n\n      // Crear URL del Blob y simular clic para descargar\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error(\"Error al descargar el analítico:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleDescargarAnalitico,\n    children: \"Anal\\xEDtico Parcial\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_c = AnaliticoButton;\nexport default AnaliticoButton;\nvar _c;\n$RefreshReg$(_c, \"AnaliticoButton\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","AnaliticoButton","dni","apNombre","carrera","resolucion","handleDescargarAnalitico","plantilla","toLowerCase","includes","response","get","params","archivo","responseType","disposition","headers","fileName","filenameRegex","matches","exec","replace","apNombreSafe","trim","carreraSafe","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","remove","error","console","onClick","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Fede/Desktop/Proyecto/registro-login/src/components/funciones/AnaliticoButton.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AnaliticoButton = ({ dni, apNombre, carrera, resolucion }) => {\r\n  const handleDescargarAnalitico = async () => {\r\n    try {\r\n      const plantilla = carrera && carrera.toLowerCase().includes(\"prof\")\r\n        ? \"Analitico_Profesorado.xlsx\"  // Para Profesorado\r\n        : \"Analitico_Tecnicatura.xlsx\"; // Para Tecnicatura\r\n\r\n      const response = await axios.get(\"http://localhost:5000/generar-analitico\", {\r\n        params: { dni, apNombre, archivo: plantilla, resolucion, carrera },\r\n        responseType: \"blob\", // Para manejar la respuesta como archivo\r\n      });\r\n\r\n      // Extraer el nombre del archivo desde la cabecera Content-Disposition\r\n      const disposition = response.headers[\"content-disposition\"];\r\n      let fileName = \"\";\r\n      if (disposition) {\r\n        const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\r\n        const matches = filenameRegex.exec(disposition);\r\n        if (matches != null && matches[1]) {\r\n          fileName = matches[1].replace(/['\"]/g, \"\");\r\n        }\r\n      }\r\n      // Si no se obtuvo el nombre, se crea uno usando el formato deseado\r\n      if (!fileName) {\r\n        const apNombreSafe = apNombre.trim();\r\n        const carreraSafe = carrera.trim();\r\n        fileName = `Analitico Parcial_${apNombreSafe}_${carreraSafe}.xlsx`;\r\n      }\r\n\r\n      // Crear URL del Blob y simular clic para descargar\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", fileName);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error(\"Error al descargar el analítico:\", error);\r\n    }\r\n  };\r\n\r\n  return <button onClick={handleDescargarAnalitico}>Analítico Parcial</button>;\r\n};\r\n\r\nexport default AnaliticoButton;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,GAAG;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAClE,MAAMC,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MACF,MAAMC,SAAS,GAAGH,OAAO,IAAIA,OAAO,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,GAC/D,4BAA4B,CAAE;MAAA,EAC9B,4BAA4B,CAAC,CAAC;;MAElC,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,yCAAyC,EAAE;QAC1EC,MAAM,EAAE;UAAEV,GAAG;UAAEC,QAAQ;UAAEU,OAAO,EAAEN,SAAS;UAAEF,UAAU;UAAED;QAAQ,CAAC;QAClEU,YAAY,EAAE,MAAM,CAAE;MACxB,CAAC,CAAC;;MAEF;MACA,MAAMC,WAAW,GAAGL,QAAQ,CAACM,OAAO,CAAC,qBAAqB,CAAC;MAC3D,IAAIC,QAAQ,GAAG,EAAE;MACjB,IAAIF,WAAW,EAAE;QACf,MAAMG,aAAa,GAAG,wCAAwC;QAC9D,MAAMC,OAAO,GAAGD,aAAa,CAACE,IAAI,CAACL,WAAW,CAAC;QAC/C,IAAII,OAAO,IAAI,IAAI,IAAIA,OAAO,CAAC,CAAC,CAAC,EAAE;UACjCF,QAAQ,GAAGE,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;QAC5C;MACF;MACA;MACA,IAAI,CAACJ,QAAQ,EAAE;QACb,MAAMK,YAAY,GAAGnB,QAAQ,CAACoB,IAAI,CAAC,CAAC;QACpC,MAAMC,WAAW,GAAGpB,OAAO,CAACmB,IAAI,CAAC,CAAC;QAClCN,QAAQ,GAAG,qBAAqBK,YAAY,IAAIE,WAAW,OAAO;MACpE;;MAEA;MACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACnB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAAC;MACjE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;MACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAElB,QAAQ,CAAC;MACvCe,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;IACf,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBAAOxC,OAAA;IAAQ0C,OAAO,EAAEpC,wBAAyB;IAAAqC,QAAA,EAAC;EAAiB;IAAA1B,QAAA,EAAA2B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC9E,CAAC;AAACC,EAAA,GA3CI9C,eAAe;AA6CrB,eAAeA,eAAe;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}